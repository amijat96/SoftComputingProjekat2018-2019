
model = load_model('model.h5')
flag = False
blue_line_c = []
green_line_c = []
blue_x1 = 0
blue_y1 = 0
blue_x2 = 0
blue_y2 = 0
green_x1 = 0
green_x2 = 0
green_y1 = 0
green_y2 = 0


def setup_vectors():
    global green_line_start
    global green_line_end
    global green_line_vector
    global green_line_length
    global green_line_unit_vector

    global blue_line_start
    global blue_line_end
    global blue_line_vector
    global blue_line_length
    global blue_line_unit_vector
    green_line_start = (green_x1, green_y1, 0)
    green_line_end = (green_x2, green_y2, 0)
    green_line_vector = vct.vector(green_line_start, green_line_end)
    green_line_length = vct.length(green_line_vector)
    if green_line_length != 0.0:
        green_line_unit_vector = vct.unit(green_line_vector)

        blue_line_unit_vector = vct.unit(blue_line_vector)


def reverse(s):
    return s[::-1]


def isS(s):


    rev = reverse(s)


    if (s == rev):
        return True
    return False


# Driver code
s = "malayaldasdaam"
ans = isS(s)

if ans == 1:
    print("Yes")
else:
    print("No")



import curses
from curses import KEY_RIGHT, KEY_LEFT, KEY_UP, KEY_DOWN
from random import randint


curses.initscr()
win = curses.newwin(20, 60, 0, 0)
win.keypad(1)
curses.noecho()
curses.curs_set(0)
win.border(0)
win.nodelay(1)


>>> print('coefficient of determination:', r_sq)
coefficient of determination: 0.9453701449127822
>>> print('intercept:', intercept)
intercept: 0.8430556452395734
>>> print('coefficients:', coefficients, sep='\n')
coefficients:
[ 2.44828275  0.16160353 -0.15259677  0.47928683 -0.4641851 ]
>>> print('predicted response:', y_pred, sep='\n')
predicted response:
[ 0.54047408 11.36340283 16.07809622 15.79139    29.73858619 23.50834636
 39.05631386 41.92339046]
 
 


